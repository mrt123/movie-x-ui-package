name: internal release
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release internal version
    runs-on: ubuntu-latest
    permissions:
      deployments: write # to update deployment status
      statuses: write # to update job status
      contents: write # to publish a GitHub release
      issues: write # to comment on released issues
      pull-requests: write # to comment on released pull requests
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'
          registry-url: 'https://npm.pkg.github.com'
      - run: npm ci

      # NOTE: if npmPublish: false is set in release.config.js, only versioning of package.json and tagging will be performed
      - name: Create semantic release  
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
        # Notice: Since npm package is not physically published, steps.semantic.outputs.new_release_version won't be populated

      # bundling and publishing of package starts below this line
      - name: build production artefacts
        env:
          NODE_ENV: staging
        run: echo $NODE_ENV # no need to npm run buld, since ./dist is provided
      - run: cp package.json ./dist #package.json is required to be present
      - run: cp ./README.md ./dist

      # for publishing to github packages see: https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-nodejs-packages#publishing-packages-to-github-packages
      - name: publish internal npm package
        run: cd dist && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: obtain new npm version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Deploy to S3
        id: S3-upload
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: 'sync'
          source: ./dist/out
          destination: "s3://movies-dev-site/${{ steps.package-version.outputs.current-version }}/"
          aws_access_key_id: ${{ secrets.AWS_S3_UPLOADER_ACCESS_KEY }}
          aws_secret_access_key: ${{ secrets.AWS_S3_UPLOADER_SECRET_ACCESS_KEY }}
          aws_region: eu-east-1

      - name: Report deployment URL
        run: echo "deployed to https://d3mgsd0qc669bh.cloudfront.net/$DEPLOY_URL"
        env:
          DEPLOY_URL: ${{ steps.package-version.outputs.current-version}}




